#!/bin/bash

# TODO: Need to script a way to find the olddate
# TODO: Need to script decrypting of the catalogue file
# TODO: Need to find a way to address the names of the different file labels
# TODO: Need to find a way to address the storage directories of different levels

# Configuration parameters go here:
c_daysbetweenmonthly=56
c_daysbetweenweekly=7

daysbetween() {
  if [[ $# -ne 2 ]]; then
    echo "Usage: daysbetween <date1> <date2> (date formatted as YYYY-MM-DD)" >&2
    exit 1
  fi
  
  date1=$1
  date2=$2
  
  if date --version &> /dev/null ; then
    # This seems like GNU date
    seconds1=$(date --date="${date1}" +%s) || \
      { echo "Could not convert date: $date1" >&2 ; exit 1; }
    seconds2=$(date --date="${date2}" +%s) || \
      { echo "Could not convert date: $date2" >&2 ; exit 1; }
  else
    # Otherwise BSD date
    seconds1=$(date -j -f "%Y-%m-%d" "${date1}" "+%s") || \
      { echo "Could not convert date: $date1" >&2 ; exit 1; }
    seconds2=$(date -j -f "%Y-%m-%d" "${date2}" "+%s") || \
      { echo "Could not convert date: $date2" >&2 ; exit 1; }
  fi

  echo $(( (seconds2 - seconds1)/86400 ))	
}


latestset() {
  if [[ $# -ne 2 ]]; then
    echo "Usage: latestset <directory> <basename>" >&2
    exit 1
  fi
  
  directory=$1
  basename=$2
  
  # ls "${basename}"'-[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]{,-[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]}{-cat.1,.[0-9]{,[0-9],[0-9][0-9]}}.dar{,.gpg}'

  # This complex regexp pipe is to filter out one- or two-date dar-files,
  # -cat or not, encrypted or not
  # Then, cut away all endings, sort and show only one line per set
  # Finally, show only the date of the most recent set
  ls "${directory}/" | \
    grep "^${basename}"'-[[:digit:]]\{4\}-[[:digit:]]\{2\}-[[:digit:]]\{2\}\(\|-[[:digit:]]\{4\}-[[:digit:]]\{2\}-[[:digit:]]\{2\}\)\(-cat\.1\|\.[[:digit:]]*\)\.dar\(\|\.gpg\)$' | \
    sed 's:\-cat\.[[:digit:]]\.dar\(\.gpg\)*$::' | \
    sed 's:\.[[:digit:]]*\.dar\(\.gpg\)*$::' | \
    sort | uniq | \
    tail -1 | sed 's:.*\([[:digit:]]\{4\}-[[:digit:]]\{2\}-[[:digit:]]\{2\}\)$:\1:'   
}

# Seems both BSD and GNU date manage this, but are different in parsing
today=$(date "+%Y-%m-%d")

latestmonthly=$(latestset "${storagedir}/dar/monthly" "${basename}") || \
      { echo "Could not convert date: $date2" >&2 ; exit 1; }
latestweekly=$(latestset "${storagedir}/dar/weekly" "${basename}") || \
      { echo "Could not convert date: $date2" >&2 ; exit 1; }
latestdaily=$(latestset "${storagedir}/dar/daily" "${basename}") || \
      { echo "Could not convert date: $date2" >&2 ; exit 1; }

# Exit if there's already a daily, weekly or monthly of this date
if [[ "${today}"="${latestmonthly}" -o \
      "${today}"="${latestweekly}" -o \
      "${today}"="${latestdaily}" ]]; then
  echo "There is already a backup from today" >&2
  exit 1
fi

# Do a monthly if the most recent monthly is more than two months old
if [[ "${today}c_daysbetweenmonthly=56
c_daysbetweenweekly=7

daysbetween

# Do a weekly if the most recent weekly or monthly is more than a week old
# Do a daily if there's no daily, weekly or monthly from today

OLDDATE=2009-07-14


  # if there's a cat, use that
  #  decrypt if decrypted is not available
  # else use the archives
  #  decrypt if decrypted is not available


# Do a regular daily
# TODO: address the monthly date properly
OLDARCHIVE="${STORAGEDIR}/dar/weekly/${BASENAME}-2009-07-06-${OLDDATE}-cat"
ARCHIVE="${STORAGEDIR}/dar/daily/${BASENAME}-${OLDDATE}-${DATE}"

# Do a daily when there's no weekly
# TODO: address the monthly date properly
OLDARCHIVE="${STORAGEDIR}/dar/monthly/${BASENAME}-${OLDDATE}-cat"
ARCHIVE="${STORAGEDIR}/dar/daily/${BASENAME}-${OLDDATE}-${DATE}"

# Do a regular weekly
OLDDATE=2009-07-06
OLDARCHIVE="${STORAGEDIR}/dar/monthly/${BASENAME}-${OLDDATE}-cat"
ARCHIVE="${STORAGEDIR}/dar/weekly/${BASENAME}-${OLDDATE}-${DATE}"

"${DAR}" -v -s 100M -y -R "${ROOTDIR}" -c "${ARCHIVE}" -A "${OLDARCHIVE}" ${EXCEPTIONS} ${DONTCOMPRESS} && \
"${DAR}" -C "${ARCHIVE}-cat" -A "${ARCHIVE}" 


# Do a regular monthly
ARCHIVE="${STORAGEDIR}/dar/monthly/${BASENAME}-${DATE}"

# Non-differential has to be the exception 
# when there's nothing to do differential from
"${DAR}" -v -s 100M -y -R "${ROOTDIR}" -c "${ARCHIVE}" -X "${BASENAME}*.dar" ${EXCEPTIONS} ${DONTCOMPRESS} && \
"${DAR}" -C "${ARCHIVE}-cat" -A "${ARCHIVE}"
